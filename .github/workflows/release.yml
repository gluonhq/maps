name: Release
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
          persist-credentials: false

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure GIT
        run: |
          git config --global user.name "Gluon Bot"
          git config --global user.email "githubbot@gluonhq.com"

      - name: Publish to Maven Central
        id: deploy
        run: |
          mvn -B -ntp -Prelease deploy -f maps
          echo ::set-output name=exit_code::$?
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create GitHub release
        if: steps.deploy.outputs.exit_code == 0
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true

      - name: Commit next development version
        if: steps.deploy.outputs.exit_code == 0
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}
          NEW_PROJECT_VERSION=${TAG%.*}.$((${TAG##*.} + 1))
          echo "Update project version to next snapshot version"
          mvn versions:set -DnewVersion=$NEW_PROJECT_VERSION-SNAPSHOT -DgenerateBackupPoms=false -f maps
          git commit maps/pom.xml -m "Prepare development of $NEW_PROJECT_VERSION"
          git push https://gluon-bot:$PAT@github.com/$GITHUB_REPOSITORY HEAD:main
        shell: bash
        env:
          PAT: ${{ secrets.GITHUB_TOKEN }}
