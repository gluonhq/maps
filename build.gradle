/*
 * Copyright (c) 2016, 2018, Gluon
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL GLUON BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'net.nemerosa:versioning:2.5.0'
    }
}

repositories {
    mavenLocal();
}

def currentOS = org.gradle.internal.os.OperatingSystem.current();
def classifier
if (currentOS.isWindows()) {
    classifier = 'win'
} else if (currentOS.isLinux()) {
    classifier = 'linux'
} else if (currentOS.isMacOsX()) {
    classifier = 'mac'
}


apply plugin: 'java'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'maven'
apply plugin: 'net.nemerosa.versioning'
apply from: rootProject.file('mavenPublish.gradle')
apply from: rootProject.file('gradle/publishing.gradle')
apply from: rootProject.file('gradle/code-quality.gradle')

dependencies {
    compile 'com.gluonhq:charm-down-plugin-storage:4.0.0-SNAPSHOT'
    compile "org.openjfx:javafx-controls:11-ea+23:$classifier"
    compile "org.openjfx:javafx-graphics:11-ea+23:$classifier"
    compile "org.openjfx:javafx-base:11-ea+23:$classifier"
}

compileJava {
    doFirst {
println("classpath = $classpath.asPath")
        options.compilerArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'javafx.controls',
            '--add-modules', 'com.gluonhq.charm.down.core',
            '--add-modules', 'com.gluonhq.charm.down.plugins.storage'
        ]
        classpath = sourceSets.main.compileClasspath
    }
}
/*
run {
    doFirst {
        jvmArgs = [
            '--module-path', classpath.filter{!it.name.startsWith("javafx-") || it.name.contains("-$classifier")}.asPath,
            '--add-modules', 'javafx.controls',
            '--add-modules', 'charm.down.plugin.storage'
        ]
        classpath = sourceSets.main.output
    }
}

task sourcesJar (type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

javadoc {
    exclude 'module-info.java'
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar, javadocJar
}
*/
